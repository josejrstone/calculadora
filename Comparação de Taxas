<html><head><base href="https://websimcreationengine.com/maquina-x-stone/">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Compare Stone</title>
    <style>
        :root {
            --stone-green: #00A868;
            --stone-dark-green: #008C5A;
            --stone-light-green: #E6F7F0;
            --stone-gray: #4A4A4A;
            --stone-light-gray: #F5F5F5;
            --stone-orange: #FF5733;
        }

        body {
            font-family: 'Roboto', Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: var(--stone-light-gray);
            color: var(--stone-gray);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            background-color: var(--stone-green);
            padding: 20px 0;
            margin-bottom: 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        header h1 {
            color: white;
            margin: 0;
            font-size: 2.5em;
            padding-left: 20px;
        }

        #menu-button {
            background-color: white;
            color: var(--stone-green);
            border: none;
            font-size: 24px;
            cursor: pointer;
            padding: 5px 10px;
            margin-left: 20px;
            border-radius: 4px;
            transition: background-color 0.3s, color 0.3s;
        }

        #menu-button:hover {
            background-color: var(--stone-light-green);
            color: var(--stone-dark-green);
        }

        body.font-size-1 { font-size: 14px; }
        body.font-size-2 { font-size: 15px; }
        body.font-size-3 { font-size: 16px; }
        body.font-size-4 { font-size: 17px; }
        body.font-size-5 { font-size: 18px; }

        .section {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
            padding: 30px;
        }

        .section h2 {
            color: var(--stone-green);
            border-bottom: 2px solid var(--stone-light-green);
            padding-bottom: 10px;
            margin-top: 0;
        }

        label {
            display: block;
            margin-top: 15px;
            font-weight: 500;
        }

        input[type="text"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
        }

        button {
            background-color: var(--stone-green);
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 18px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
            display: block;  
            margin: 20px auto;  
            width: fit-content;  
        }

        button:hover {
            background-color: var(--stone-dark-green);
        }

        #resultado {
            background-color: var(--stone-light-green);
            border-radius: 8px;
            padding: 20px;
            margin-top: 30px;
        }

        .positivo {
            color: var(--stone-green);
            font-weight: bold;
        }

        .negativo {
            color: var(--stone-orange);
            font-weight: bold;
        }

        .neutro {
            color: var(--stone-gray);
        }

        .small-text {
            font-size: 0.9em;
            color: #777;
            margin-top: 5px;
        }

        .side-menu {
            height: 100%;
            width: 0;
            position: fixed;
            z-index: 1000;
            top: 0;
            right: 0;
            background-color: var(--stone-green);
            overflow-x: hidden;
            transition: 0.5s;
            padding-top: 60px;
            box-shadow: 0 0 10px rgba(0,0,0,0.3);
        }

        .menu-category {
            margin-bottom: 20px;
        }

        .menu-category h3 {
            color: var(--stone-light-green);
            font-size: 18px;
            margin-bottom: 10px;
            padding-left: 32px;
            border-bottom: 1px solid var(--stone-light-green);
        }

        .side-menu a {
            padding: 8px 8px 8px 32px;
            text-decoration: none;
            font-size: 16px;
            color: white;
            display: block;
            transition: 0.3s;
        }

        .side-menu a:hover {
            color: var(--stone-light-green);
        }

        .side-menu .close-btn {
            position: absolute;
            top: 0;
            right: 25px; 
            font-size: 24px; 
            margin-left: 0; 
            margin-right: 50px; 
        }

        @media screen and (max-height: 450px) {
            .side-menu {padding-top: 15px;}
            .side-menu a {font-size: 14px;} 
        }

        body::before {
            content: "";
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0.1;
            z-index: -1;
            background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%2300a868' fill-opacity='0.1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
        }

        .overlay {
            display: none;
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0,0,0,0.5);
            z-index: 999;
            cursor: pointer;
        }

        .overlay-content {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.7);
            z-index: 2000;
            overflow-y: auto;
        }

        #manual-content {
            background-color: white;
            margin: 50px auto;
            padding: 20px;
            width: 80%;
            max-width: 800px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.3);
        }

        #manual-content h2 {
            color: var(--stone-green);
            border-bottom: 2px solid var(--stone-light-green);
            padding-bottom: 10px;
        }
    </style>
</head>
<body>
    <input type="file" id="fileInput" style="display: none;" accept=".json">
    <div class="overlay" id="overlay"></div>
    <div class="overlay-content" id="manual-overlay">
        <div id="manual-content">
            <h2>Manual de Uso</h2>
            <p>Exemplo de manual de Ajuda</p>
            <button onclick="hideManual()">Fechar Manual</button>
        </div>
    </div>
    <header>
        <h1>Compare Stone</h1>
        <button id="menu-button">☰</button>
    </header>
    <div id="side-menu" class="side-menu">
        <a href="javascript:void(0)" class="close-btn" onclick="closeNav()">&times;</a>
        
        <div class="menu-category">
            <h3>Início</h3>
            <a href="javascript:void(0)" onclick="goToHome()">Página Inicial</a>
        </div>
        
        <div class="menu-category">
            <h3>Ajuda</h3>
            <a href="javascript:void(0)" onclick="showManual()">Manual de Uso</a>
        </div>
        
        <div class="menu-category">
            <h3>Exportar e Importar</h3>
            <a href="javascript:void(0)" onclick="saveData()">Salvar Dados</a>
            <a href="javascript:void(0)" onclick="loadData()">Carregar Dados</a>
        </div>
        
        <div class="menu-category">
            <h3>Compartilhar</h3>
            <a href="#">Compartilhar com Cliente</a>
        </div>
        
        <div class="menu-category">
            <h3>Acessibilidade</h3>
            <a href="#" id="increase-font">Aumentar Fonte (A+)</a>
            <a href="#" id="decrease-font">Diminuir Fonte (A-)</a>
            <a href="#" id="reset-font">Fonte Padrão</a>
        </div>
        
        <div class="menu-category">
            <h3>Contato</h3>
            <a href="#">Contato pelo Whatsapp</a>
        </div>
    </div>
    <div class="container" id="main-content">
        <div class="section" id="maquina-atual">
            <h2>Máquina Atual</h2>
            <label>Débito (%): <input type="text" id="atual-debito"></label>
            <label>Crédito à Vista (%): <input type="text" id="atual-credito-vista"></label>
            <label>Crédito 2x a 6x (%): <input type="text" id="atual-credito-2-6"></label>
            <label>Crédito 7x a 12x (%): <input type="text" id="atual-credito-7-12"></label>
            <label>Pix (%): <input type="text" id="atual-pix"></label>
            <label>Aluguel (R$): <input type="text" id="atual-aluguel"></label>
            <label>Quantidade de Máquinas: <input type="text" id="atual-quantidade"></label>
            <div class="outros-label-container">
                <label class="editable-label" data-for="atual-outros-real" onclick="editLabel(this)">Outros (R$):</label>
                <input type="text" id="atual-outros-real">
            </div>
            <div class="outros-label-container">
                <label class="editable-label" data-for="atual-outros-percentual" onclick="editLabel(this)">Outros (%):</label>
                <input type="text" id="atual-outros-percentual">
            </div>
            <p class="small-text">Você pode alterar o nome do ítem "outros" clicando no nome.</p>
        </div>
        
        <div class="section" id="oferta-stone">
            <h2>Oferta Stone</h2>
            <div id="stone-debito-container" style="display: none;">
                <label>Débito (%): <input type="text" id="stone-debito"></label>
            </div>
            <div id="stone-credito-vista-container" style="display: none;">
                <label>Crédito à Vista (%): <input type="text" id="stone-credito-vista"></label>
            </div>
            <div id="stone-credito-2-6-container" style="display: none;">
                <label>Crédito 2x a 6x (%): <input type="text" id="stone-credito-2-6"></label>
            </div>
            <div id="stone-credito-7-12-container" style="display: none;">
                <label>Crédito 7x a 12x (%): <input type="text" id="stone-credito-7-12"></label>
            </div>
            <div id="stone-pix-container" style="display: none;">
                <label>Pix (%): <input type="text" id="stone-pix"></label>
            </div>
            <div id="stone-aluguel-container" style="display: none;">
                <label>Aluguel (R$): <input type="text" id="stone-aluguel"></label>
            </div>
            <div id="stone-quantidade-container" style="display: none;">
                <label>Quantidade de Máquinas: <input type="text" id="stone-quantidade"></label>
            </div>
            <div id="stone-outros-real-container" style="display: none;" class="outros-label-container">
                <label class="editable-label" data-for="stone-outros-real" onclick="editLabel(this)">Outros (R$):</label>
                <input type="text" id="stone-outros-real">
            </div>
            <div id="stone-outros-percentual-container" style="display: none;" class="outros-label-container">
                <label class="editable-label" data-for="stone-outros-percentual" onclick="editLabel(this)">Outros (%):</label>
                <input type="text" id="stone-outros-percentual">
            </div>
            <div style="margin-top: 20px;">
                <label for="raio-x-checkbox">
                    <input type="checkbox" id="raio-x-checkbox" onchange="toggleRaioX()">
                    Raio-X
                </label>
            </div>
            <div id="raio-x-container" style="display: none;">
                <label>Valor do Raio-X (R$): <input type="text" id="raio-x-valor"></label>
            </div>
            <div style="margin-top: 10px;">
                <label for="ipv-checkbox">
                    <input type="checkbox" id="ipv-checkbox">
                    Com IPV
                </label>
            </div>
        </div>

        <div class="section" id="valor-mensal">
            <h2>Valor mensal de vendas (R$)</h2>
            <div id="venda-debito-container" style="display: none;">
                <label>Débito: <input type="text" id="venda-debito"></label>
            </div>
            <div id="venda-credito-vista-container" style="display: none;">
                <label>Crédito à Vista: <input type="text" id="venda-credito-vista"></label>
            </div>
            <div id="venda-credito-2-6-container" style="display: none;">
                <label>Crédito 2x a 6x: <input type="text" id="venda-credito-2-6"></label>
            </div>
            <div id="venda-credito-7-12-container" style="display: none;">
                <label>Crédito 7x a 12x: <input type="text" id="venda-credito-7-12"></label>
            </div>
            <div id="venda-pix-container" style="display: none;">
                <label>Pix: <input type="text" id="venda-pix"></label>
            </div>
            <div id="venda-outros-percentual-container" style="display: none;">
                <label class="editable-label" data-for="venda-outros-percentual" onclick="editLabel(this)">Outros (%):</label>
                <input type="text" id="venda-outros-percentual">
            </div>
        </div>
        
        <button id="calcular-button" onclick="calcular()">Calcular</button>
        
        <div id="error-messages"></div>
        <div id="resultado"></div>
    </div>

    <script>
        let currentFontSize = 3; 

        function updateFontSize() {
            document.body.className = `font-size-${currentFontSize}`;
        }

        function increaseFontSize() {
            if (currentFontSize < 5) {
                currentFontSize++;
                updateFontSize();
            }
        }

        function decreaseFontSize() {
            if (currentFontSize > 1) {
                currentFontSize--;
                updateFontSize();
            }
        }

        function resetFontSize() {
            currentFontSize = 3;
            updateFontSize();
        }

        document.getElementById('increase-font').addEventListener('click', increaseFontSize);
        document.getElementById('decrease-font').addEventListener('click', decreaseFontSize);
        document.getElementById('reset-font').addEventListener('click', resetFontSize);

        function formatToBrazilianCurrency(number) {
            return number.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        }

        function formatDifference(value, percentage = null) {
            const formattedValue = formatToBrazilianCurrency(Math.abs(value));
            let result = '';
            if (value > 0) {
                result = `<span class="positivo">Você vai economizar ${formattedValue}`;
            } else if (value < 0) {
                result = `<span class="negativo">Você irá investir ${formattedValue}`;
            } else {
                result = `<span class="neutro">${formattedValue}`;
            }
            
            if (percentage !== null) {
                result += ` (${percentage.toFixed(2)}%)`;
            }
            
            result += '</span>';
            return result;
        }

        function formatCurrency(input) {
            let value = input.value.replace(/\D/g, '');
            value = (parseInt(value) / 100).toFixed(2) + '';
            value = value.replace(".", ",");
            value = value.replace(/(\d)(\d{3})(\,\d{2})$/g, "$1.$2$3");
            input.value = value;
        }

        function parseInputValue(id) {
            const element = document.getElementById(id);
            const value = element.value.replace(/\./g, '').replace(',', '.');
            if (id.endsWith('quantidade') && value === '') {
                const aluguelId = id.replace('quantidade', 'aluguel');
                const aluguelValue = document.getElementById(aluguelId).value.trim();
                return aluguelValue === '' ? 0 : 1;
            }
            return value === '' ? 0 : parseFloat(value) || 0;
        }

        function calculatePercentageDifference(atual, stone) {
            return atual - stone;
        }

        function calcular() {
            document.getElementById('error-messages').innerHTML = '';

            const atualDebito = parseInputValue('atual-debito');
            const atualCreditoVista = parseInputValue('atual-credito-vista');
            const atualCredito26 = parseInputValue('atual-credito-2-6');
            const atualCredito712 = parseInputValue('atual-credito-7-12');
            const atualPix = parseInputValue('atual-pix');
            const atualOutrosPercentual = parseInputValue('atual-outros-percentual');

            const stoneDebito = parseInputValue('stone-debito');
            const stoneCreditoVista = parseInputValue('stone-credito-vista');
            const stoneCredito26 = parseInputValue('stone-credito-2-6');
            const stoneCredito712 = parseInputValue('stone-credito-7-12');
            const stonePix = parseInputValue('stone-pix');
            const stoneOutrosPercentual = parseInputValue('stone-outros-percentual');

            const vendaDebito = parseInputValue('venda-debito') ?? 0;
            const vendaCreditoVista = parseInputValue('venda-credito-vista') ?? 0;
            const vendaCredito26 = parseInputValue('venda-credito-2-6') ?? 0;
            const vendaCredito712 = parseInputValue('venda-credito-7-12') ?? 0;
            const vendaPix = parseInputValue('venda-pix') ?? 0;
            const vendaOutrosPercentual = parseInputValue('venda-outros-percentual') ?? 0;

            if ((atualDebito > 0 || stoneDebito > 0) && vendaDebito === 0) {
                return displayErrorMessage("Por favor, insira o valor mensal de vendas para Débito.");
            }
            if ((atualCreditoVista > 0 || stoneCreditoVista > 0) && vendaCreditoVista === 0) {
                return displayErrorMessage("Por favor, insira o valor mensal de vendas para Crédito à Vista.");
            }
            if ((atualCredito26 > 0 || stoneCredito26 > 0) && vendaCredito26 === 0) {
                return displayErrorMessage("Por favor, insira o valor mensal de vendas para Crédito 2x a 6x.");
            }
            if ((atualCredito712 > 0 || stoneCredito712 > 0) && vendaCredito712 === 0) {
                return displayErrorMessage("Por favor, insira o valor mensal de vendas para Crédito 7x a 12x.");
            }
            if ((atualPix > 0 || stonePix > 0) && vendaPix === 0) {
                return displayErrorMessage("Por favor, insira o valor mensal de vendas para Pix.");
            }
            if ((atualOutrosPercentual > 0 || stoneOutrosPercentual > 0) && vendaOutrosPercentual === 0) {
                return displayErrorMessage("Por favor, insira o valor mensal de vendas para Outros (%).");
            }

            const custoAtualDebito = vendaDebito * (atualDebito / 100);
            const custoAtualCreditoVista = vendaCreditoVista * (atualCreditoVista / 100);
            const custoAtualCredito26 = vendaCredito26 * (atualCredito26 / 100);
            const custoAtualCredito712 = vendaCredito712 * (atualCredito712 / 100);
            const custoAtualPix = vendaPix * (atualPix / 100);
            const custoAtualAluguel = parseInputValue('atual-aluguel') * parseInputValue('atual-quantidade');
            const vendaTotal = vendaDebito + vendaCreditoVista + vendaCredito26 + vendaCredito712 + vendaPix + vendaOutrosPercentual;
            const custoAtualOutrosPercentual = vendaTotal * (atualOutrosPercentual / 100);
            const custoAtualOutrosReal = parseInputValue('atual-outros-real');

            const custoTotalAtual = custoAtualDebito + custoAtualCreditoVista + custoAtualCredito26 + custoAtualCredito712 + custoAtualPix + custoAtualAluguel + custoAtualOutrosPercentual + custoAtualOutrosReal;

            const ipvCheckbox = document.getElementById('ipv-checkbox');
            const custoStoneAluguel = ipvCheckbox.checked ? 0 : parseInputValue('stone-aluguel') * parseInputValue('stone-quantidade');

            const custoStoneDebito = vendaDebito * (stoneDebito / 100);
            const custoStoneCreditoVista = vendaCreditoVista * (stoneCreditoVista / 100);
            const custoStoneCredito26 = vendaCredito26 * (stoneCredito26 / 100);
            const custoStoneCredito712 = vendaCredito712 * (stoneCredito712 / 100);
            const custoStonePix = vendaPix * (stonePix / 100);
            const custoStoneOutrosPercentual = vendaTotal * (stoneOutrosPercentual / 100);
            const custoStoneOutrosReal = parseInputValue('stone-outros-real');
            const raioXValor = document.getElementById('raio-x-checkbox').checked ? parseInputValue('raio-x-valor') : 0;

            const custoTotalStone = custoStoneDebito + custoStoneCreditoVista + custoStoneCredito26 + custoStoneCredito712 + custoStonePix + custoStoneAluguel + custoStoneOutrosPercentual + custoStoneOutrosReal - raioXValor;

            const diferenca = custoTotalAtual - custoTotalStone;

            let resultado = "<h3>Resultado da comparação:</h3>";
            resultado += "<p>Custo total com a máquina atual: " + formatToBrazilianCurrency(custoTotalAtual) + "</p>";
            resultado += "<p>Custo total com a oferta Stone: " + formatToBrazilianCurrency(custoTotalStone) + "</p>";

            let resultadoDetalhado = "<h3>Detalhamento por modalidade:</h3>";
            const fieldsWithValues = {
                debito: vendaDebito > 0,
                creditoVista: vendaCreditoVista > 0,
                credito26: vendaCredito26 > 0,
                credito712: vendaCredito712 > 0,
                pix: vendaPix > 0,
                aluguel: parseInputValue('atual-aluguel') > 0 || parseInputValue('stone-aluguel') > 0,
                outrosReal: parseInputValue('atual-outros-real') > 0 || parseInputValue('stone-outros-real') > 0,
                outrosPercentual: parseInputValue('atual-outros-percentual') > 0 || parseInputValue('stone-outros-percentual') > 0
            };

            if (fieldsWithValues.debito) {
                const rateDiff = calculatePercentageDifference(atualDebito, stoneDebito);
                resultadoDetalhado += `<p>Débito: ${formatDifference(custoAtualDebito - custoStoneDebito)} (${rateDiff.toFixed(2)}%)</p>`;
            }
            if (fieldsWithValues.creditoVista) {
                const rateDiff = calculatePercentageDifference(atualCreditoVista, stoneCreditoVista);
                resultadoDetalhado += `<p>Crédito à Vista: ${formatDifference(custoAtualCreditoVista - custoStoneCreditoVista)} (${rateDiff.toFixed(2)}%)</p>`;
            }
            if (fieldsWithValues.credito26) {
                const rateDiff = calculatePercentageDifference(atualCredito26, stoneCredito26);
                resultadoDetalhado += `<p>Crédito 2x a 6x: ${formatDifference(custoAtualCredito26 - custoStoneCredito26)} (${rateDiff.toFixed(2)}%)</p>`;
            }
            if (fieldsWithValues.credito712) {
                const rateDiff = calculatePercentageDifference(atualCredito712, stoneCredito712);
                resultadoDetalhado += `<p>Crédito 7x a 12x: ${formatDifference(custoAtualCredito712 - custoStoneCredito712)} (${rateDiff.toFixed(2)}%)</p>`;
            }
            if (fieldsWithValues.pix) {
                const rateDiff = calculatePercentageDifference(atualPix, stonePix);
                resultadoDetalhado += `<p>Pix: ${formatDifference(custoAtualPix - custoStonePix)} (${rateDiff.toFixed(2)}%)</p>`;
            }
            if (fieldsWithValues.aluguel) {
                resultadoDetalhado += `<p>Aluguel: ${formatDifference(custoAtualAluguel - custoStoneAluguel)}</p>`;
            }
            if (fieldsWithValues.outrosReal) {
                const atualOutrosRealLabel = getCustomLabel('atual', 'real');
                const stoneOutrosRealLabel = getCustomLabel('stone', 'real');
                const labelText = atualOutrosRealLabel === stoneOutrosRealLabel ? atualOutrosRealLabel : `${atualOutrosRealLabel} / ${stoneOutrosRealLabel}`;
                resultadoDetalhado += `<p>${labelText}: ${formatDifference(custoAtualOutrosReal - custoStoneOutrosReal)}</p>`;
            }
            if (fieldsWithValues.outrosPercentual) {
                const atualOutrosPercentualLabel = getCustomLabel('atual', 'percentual');
                const stoneOutrosPercentualLabel = getCustomLabel('stone', 'percentual');
                const labelText = atualOutrosPercentualLabel === stoneOutrosPercentualLabel ? atualOutrosPercentualLabel : `${atualOutrosPercentualLabel} / ${stoneOutrosPercentualLabel}`;
                const rateDiff = calculatePercentageDifference(atualOutrosPercentual, stoneOutrosPercentual);
                resultadoDetalhado += `<p>${labelText}: ${formatDifference(custoAtualOutrosPercentual - custoStoneOutrosPercentual)} (${rateDiff.toFixed(2)}%)</p>`;
            }

            if (raioXValor > 0) {
                resultadoDetalhado += "<p>Economia do Raio-X: " + formatDifference(raioXValor) + "</p>";
            }

            resultadoDetalhado += "<h4>Conclusão:</h4>";
            if (diferenca > 0) {
                const economiaAnual = diferenca * 12;
                resultadoDetalhado += "<p class='positivo'>A oferta Stone é vantajosa. Você economizaria " + formatToBrazilianCurrency(diferenca) + " por mês, o que representa uma economia de " + formatToBrazilianCurrency(economiaAnual) + " por ano.</p>";
            } else if (diferenca < 0) {
                resultadoDetalhado += "<p class='negativo'>A oferta Stone requer um investimento. Seria necessário um investimento de " + formatToBrazilianCurrency(Math.abs(diferenca)) + " por mês para ser Stone.</p>";
            } else {
                resultadoDetalhado += "<p>As ofertas são equivalentes em termos de custo.</p>";
            }

            document.getElementById('resultado').innerHTML = resultadoDetalhado;
        }

        function displayErrorMessage(message) {
            const errorContainer = document.getElementById('error-messages');
            errorContainer.innerHTML = `<p style="color: red;">${message}</p>`;
            document.getElementById('resultado').innerHTML = '';
        }

        function toggleRaioX() {
            const checkbox = document.getElementById('raio-x-checkbox');
            const container = document.getElementById('raio-x-container');
            container.style.display = checkbox.checked ? 'block' : 'none';
        }

        function getCustomLabel(section, type) {
            const label = document.querySelector(`label[data-for="${section}-outros-${type}"]`);
            return label ? label.textContent.replace(':', '') : (type === 'percentual' ? 'Outros %' : 'Outros R$');
        }

        function updateFieldsVisibility() {
            const fields = [
                'debito', 'credito-vista', 'credito-2-6', 'credito-7-12', 'pix',
                'aluguel', 'quantidade', 'outros-real', 'outros-percentual'
            ];

            fields.forEach(field => {
                const atualValue = parseInputValue(`atual-${field}`);
                const stoneContainer = document.getElementById(`stone-${field}-container`);
                const vendaContainer = document.getElementById(`venda-${field}-container`);
                
                if (atualValue > 0) {
                    if (stoneContainer) stoneContainer.style.display = 'block';
                    if (vendaContainer) vendaContainer.style.display = 'block';
                } else {
                    if (stoneContainer) stoneContainer.style.display = 'none';
                    if (vendaContainer && field !== 'outros-real') vendaContainer.style.display = 'none';
                }
            });
        }

        function addInputListeners() {
            const fields = [
                'debito', 'credito-vista', 'credito-2-6', 'credito-7-12', 'pix',
                'aluguel', 'quantidade', 'outros-real', 'outros-percentual'
            ];

            fields.forEach(field => {
                const atualInput = document.getElementById(`atual-${field}`);
                atualInput.addEventListener('input', updateFieldsVisibility);
            });
        }

        function setupInputFormatting() {
            const inputs = document.querySelectorAll('input[type="text"]');
            inputs.forEach(input => {
                input.setAttribute('inputmode', 'numeric');
                input.setAttribute('pattern', '[0-9]*');
                input.addEventListener('input', function(e) {
                    formatCurrency(e.target);
                });
            });
        }

        function editLabel(labelElement) {
            const currentText = labelElement.textContent.replace(':', '').trim();
            const inputField = document.createElement('input');
            inputField.type = 'text';
            inputField.value = currentText;
            inputField.style.width = '150px';

            const saveButton = document.createElement('button');
            saveButton.textContent = 'Save';
            saveButton.classList.add('save-label-button');
            saveButton.onclick = function() {
                saveLabel(labelElement, inputField);
            };

            labelElement.style.display = 'none';
            labelElement.parentNode.insertBefore(inputField, labelElement.nextSibling);
            labelElement.parentNode.insertBefore(saveButton, inputField.nextSibling);

            inputField.focus();
        }

        function saveLabel(labelElement, inputField) {
            const newText = inputField.value.trim();
            if (newText) {
                labelElement.textContent = newText + ':';
                
                const [section, type] = labelElement.getAttribute('data-for').split('-').slice(0, 2);
                updateOtherLabels(section, type, newText);
            }
            labelElement.style.display = '';
            inputField.remove();
            const saveButton = labelElement.parentNode.querySelector('.save-label-button');
            if (saveButton) {
                saveButton.remove();
            }
        }

        function updateOtherLabels(section, type, newText) {
            const otherSection = section === 'atual' ? 'stone' : 'atual';
            const otherLabel = document.querySelector(`label[data-for="${otherSection}-outros-${type}"]`);
            if (otherLabel) {
                otherLabel.textContent = newText + ':';
            }
            const vendaLabel = document.querySelector(`label[data-for="venda-outros-${type}"]`);
            if (vendaLabel) {
                vendaLabel.textContent = newText + ':';
            }
        }

        function loadData() {
            document.getElementById('fileInput').click();
        }

        document.getElementById('fileInput').addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    try {
                        const data = JSON.parse(e.target.result);
                        updatePageWithLoadedData(data);
                    } catch (error) {
                        alert('Error parsing file: ' + error.message);
                    }
                };
                reader.readAsText(file);
            }
        });

        function updatePageWithLoadedData(data) {
            for (const [key, value] of Object.entries(data.maquinaAtual)) {
                const id = `atual-${key.replace(/([A-Z])/g, '-$1').toLowerCase()}`;
                document.getElementById(id).value = value;
            }

            for (const [key, value] of Object.entries(data.ofertaStone)) {
                if (key === 'raioX') {
                    document.getElementById('raio-x-checkbox').checked = value;
                    toggleRaioX();
                } else if (key === 'ipv') {
                    document.getElementById('ipv-checkbox').checked = value;
                } else {
                    const id = `stone-${key.replace(/([A-Z])/g, '-$1').toLowerCase()}`;
                    document.getElementById(id).value = value;
                }
            }

            for (const [key, value] of Object.entries(data.valorMensal)) {
                const id = `venda-${key.replace(/([A-Z])/g, '-$1').toLowerCase()}`;
                document.getElementById(id).value = value;
            }

            updateFieldsVisibility();
            alert('Dados carregados com sucesso!');
        }

        function saveData() {
            const data = {
                maquinaAtual: {
                    debito: document.getElementById('atual-debito').value,
                    creditoVista: document.getElementById('atual-credito-vista').value,
                    credito26: document.getElementById('atual-credito-2-6').value,
                    credito712: document.getElementById('atual-credito-7-12').value,
                    pix: document.getElementById('atual-pix').value,
                    aluguel: document.getElementById('atual-aluguel').value,
                    quantidade: document.getElementById('atual-quantidade').value,
                    outrosReal: document.getElementById('atual-outros-real').value,
                    outrosPercentual: document.getElementById('atual-outros-percentual').value
                },
                ofertaStone: {
                    debito: document.getElementById('stone-debito').value,
                    creditoVista: document.getElementById('stone-credito-vista').value,
                    credito26: document.getElementById('stone-credito-2-6').value,
                    credito712: document.getElementById('stone-credito-7-12').value,
                    pix: document.getElementById('stone-pix').value,
                    aluguel: document.getElementById('stone-aluguel').value,
                    quantidade: document.getElementById('stone-quantidade').value,
                    outrosReal: document.getElementById('stone-outros-real').value,
                    outrosPercentual: document.getElementById('stone-outros-percentual').value,
                    raioX: document.getElementById('raio-x-checkbox').checked,
                    raioXValor: document.getElementById('raio-x-valor').value,
                    ipv: document.getElementById('ipv-checkbox').checked
                },
                valorMensal: {
                    debito: document.getElementById('venda-debito').value,
                    creditoVista: document.getElementById('venda-credito-vista').value,
                    credito26: document.getElementById('venda-credito-2-6').value,
                    credito712: document.getElementById('venda-credito-7-12').value,
                    pix: document.getElementById('venda-pix').value,
                    outrosPercentual: document.getElementById('venda-outros-percentual').value
                }
            };

            const jsonData = JSON.stringify(data, null, 2);
            const blob = new Blob([jsonData], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const filename = prompt('Digite um nome para o arquivo:', 'dados_compare_stone.json');

            if (filename) {
                const a = document.createElement('a');
                a.href = url;
                a.download = filename;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                URL.revokeObjectURL(url);
            }
        }

        document.addEventListener('DOMContentLoaded', setupInputFormatting);
        updateFieldsVisibility();
        addInputListeners();
        
        function openNav() {
            document.getElementById("side-menu").style.width = "250px";
            document.getElementById("overlay").style.display = "block";
        }

        function closeNav() {
            document.getElementById("side-menu").style.width = "0";
            document.getElementById("overlay").style.display = "none";
        }

        function hideManual() {
            document.getElementById('manual-overlay').style.display = 'none';
            document.getElementById('main-content').style.display = 'block';
        }

        function showManual() {
            document.getElementById('manual-overlay').style.display = 'block';
            document.getElementById('main-content').style.display = 'none';
            closeNav();
        }

        function showHome() {
            document.getElementById('manual-overlay').style.display = 'none';
            document.getElementById('main-content').style.display = 'block';
        }

        function goToHome() {
            closeNav();
            showHome();
        }

        document.querySelector('.menu-category a[onclick="goToHome()"]').addEventListener('click', goToHome);
        document.getElementById('overlay').addEventListener('click', closeNav);
        document.getElementById('menu-button').addEventListener('click', openNav);

        updateFontSize();
    </script>
</body></html>